{"index":{"slug":"index","filePath":"index.md","title":"~/techsavvyash","links":["projects/BSAI","projects","blogs"],"tags":[],"content":"I’m a software engineer trying to build systems which make people’s lives easier. I have 3 years of experience working on production systems for a couple of Indian states helping the under privileged strata of the population thanks to the amazing opportunities and problems I got to work on during my time at Samagra. Presently, I ship code at Zomato trying to get simplify the lives of merchants on the platform.\nI was part of the core team that built Bharat Sah’AI’yak which was acquired by OLA Krutrim in early 2025. BSAI is a AI enabled compute platform which could be modified for a wide range of usecases like ChatBots, information processing systems etc.\nI have a deep love for databases, distributed systems, PLT and open source. Currently, I am exploring making AI coding agents smarter and simplifying selling &amp; hosting APIs on the internet with my a small community of my friends over at TheFlywheel - Boutique AI Studio.\nSince you are here, you might want to take a look at my work and also blogs once I start publishing them."},"blogs/index":{"slug":"blogs/index","filePath":"blogs/_index.md","title":"Blogs","links":[],"tags":[],"content":"I haven’t been able to finish any of the blogs yet, but some of the ones I am currently working on are listed below, will keep publishing them as I find them to be in a readable state.\nTech Blogs\n\nWriting a new custom caddy module from Scratch ft. Veil &amp; Cursor\nWhat is Beckn and how to adapt and use it?\nDiving deeper into Authentication and Authorization and IAM systems ft. OIDC Lite.\n\nThoughts\n\nA year into full time software engineering jobs\nLearnings from building in the GovTech domain for the Indian people ft. Samagra\n"},"projects/BSAI":{"slug":"projects/BSAI","filePath":"projects/BSAI.md","title":"Bharat Sah'AI'yak","links":[],"tags":["projects"],"content":"Bharat Sah’AI’yak or BSAI is a AI enabled compute platform aimed to be flexible enough to serve a varied variety of usecases from building RAG based chatbots (like AKAI, KMAI, MahaKumbh bot etc. - more on those in these later), data processing pipelines, testing suite for LLM response accuracy and a lot of other use cases -  since it is a compute platform was designed to behave more like a programming language on steroids.\nIn the early days the development, BSAI was adopted for Agriculture with a singular problem statement - getting the crop and cattle farming advisory at the finger tips of farmers keeping in mind their troubles with technology.\nThe BSAI team came up with just the right fit of solution which given the nature of business at Samagra was scalable and adaptable enough to be deployed in context of all the states where we were running agricultural advisory programs.\nThe project ran a successful pilot in two indian states:\n\nOdisha - Under the name of AmaKrushiAI chatbot (AKAI)\nUttar Pradesh - As KisanMitra AI (KMAI)\n\nAs part of improvements for these two production deployments being used by around 50K farmers per day we added auto training pipelines to keep the chatbots updated with latest agricultural advisory data which included of writing our own PDF parsers, table parser because the advisory from Indian meterological institutes of these state are in the form of printed textbook pdfs.\nAfter this BSAI was also used to build the chatbot for Maha Kumbh 2025 as a part of Government of India’s Digital India and Digital Kumbh initiatives where millions of devotees used the bot for a period of the festival and we served them seamlessly. Another thing which was special about MahaKumbh BSAI adoption was that it was the first time where external teams like OLA Krutrim and BeeHyv used and built on top of BSAI proving that the platform was mature enough to onboard external teams to just use the developer platform and build on top of it to power population scale use cases.\nBSAI was ultimately acquired by OLA Krutrim in early 2025 and is currently being worked on as part of Krutrim’s larger vision of building India’s own state of the art AI agent."},"projects/Beckn":{"slug":"projects/Beckn","filePath":"projects/Beckn.md","title":"Beckn","links":[],"tags":["projects","gov-tech","open-source"],"content":"Beckn is a universal resource discovery and transaction protocol that enables the leap to open, decentralized, and interoperable peer-to-peer networks. Beckn is a great choice when you want to build projects and products integrated various different providers into a singular discovery platform. At it’s core Beckn has three main network participant entities - Beckn Gateway (BG), Beckn Application Platform (BAP) and Beckn Provider Platform (BPP). In very simplistic and partially right terms these could be thought of simply as a network level proxy or gateway server connecting a client side application (BAP) to a server side application (BPP). I will write a more detailed blog around Beckn sometime later, till then this much information is enough to understand more about the projects I have worked on with Beckn.\nMy first ever production project that I worked on was the loan discovery platform for Odisha Government’s SAFAL Portal. The problem statement was one click enablement of credit for farmers from various credit providers since the previous process for getting credit was very cumbersome and unapproachable for the technologically challenged farmers. We employed Beckn to allow for this by writing an adaptation of the specification for credit domain and then developing a system where multiple banks could be onboarded without much overhead of development on their pre-existing systems by developing simple adapters which could just transform the payloads from the bank’s backend specifiation to Beckn specification and vice-versa. The entire codebase is open sourced in the Konnect Odisha github organisation. The stack features a DEPA based consent manager to store the user’s consent for what information they want to share with the credit providers and what information they don’t.\nIn the system the safal portal acted as a BAP and the credit providers acted as the BPPs all of which could be accessed on the platform and the entire process and stage of the application could be tracked from there to enable easy and seamless integration making the process of seeking credit a lot more simpler for the farmers.\nThe second instance was when we joined the Beckn community to enable Open network for learning and livelihood transactions (ONEST) which is the adaptation of Beckn for the skilling and education domain. As a part of the community we helped design and shape the ONEST specification and also helped with a reference implementation for the initial v1.1 of the specification which was launched and used in for the Skillathon organised by FIDE to introduce ONEST with the world when it was in it’s early stages of development in Feb’23. ONEST was known as Decentralised Skilling and Education Protocol (DSEP) protocol. The reference implementation can be found at the samagra-development/dsep github."},"projects/OIDC":{"slug":"projects/OIDC","filePath":"projects/OIDC.md","title":"OIDC Lite","links":[],"tags":["projects","open-source"],"content":"OIDC Lite is a project I built with my college friends Debatreya, Utkarsh &amp; Ashutosh to learn more about the OIDC protocol and also because we wanted a lighter alternative to FusionAuth and KeyCloak which are great feature rich projects but for most usecases we don’t need those features and while rolling your own auth is fun, it gets boring and repeatitive after a couple of times, hence as a result, OIDC light was born, which could be used as a authentication solution similar to FA and Keycloak but without the bloat.\nYou can read more about the project in the OIDC Lite docs."},"projects/RCW":{"slug":"projects/RCW","filePath":"projects/RCW.md","title":"Verifiable Credentials","links":[],"tags":["projects"],"content":"Introduction\nRegistry, Credentials and Wallet (RCW) is a project that implements the core Verifiable Credentials (VC) Specification published by W3C.\nInitial implemenetation of RCW was done as the core credentialling services for the Unified Learner’s Passbook (ULP) project which was proposed in the National Education Policy, 2020 (NEP 2020) by Ministry of Education, Government of India. The pilot launch of ULP is scheduled for the state of Uttar Pradesh, India (most populous state of India).\nOpen Source Relevance\nThe core services, namely, Credential-MS, Cred-Schema-MS and Identity were abstracted out and contributed to Sunbird RC. Sunbird RC is the software which powers the generation and management of credentials like our COVID Vaccination certificate in India. These core services are maintained by the original implementers, SamagraX alongside me here at Registry, Credentials and Wallet (RCW).\nLink to commits contributed by me to Sunbird RC for their 2.0 release\nArchitecture, Tech Stack and Deployment\nThese services follow a microservices architecture to enable credentialling in your project. The architecture of how these services work with each other is shown in the picture below.\n\nEach of these services are built using NestJS with TypeScript and come bundled with Dockerfile, Jenkinsfile and Ansible roles for easy deployment. The RCW Github Organisation has the devops which hosts a one click deployment mechanism of these services to be used in any project.\nReferences\n\nVerifiable Credentials Specification\nNational Education Policy 2020\nUnified Learner’s Passbook Github\nSunbird RC\nTeam SamagraX on Github\nRCW Github\n"},"projects/Stencil":{"slug":"projects/Stencil","filePath":"projects/Stencil.md","title":"Stencil","links":["projects/BSAI"],"tags":["projects","open-source","frameworks"],"content":"Stencil is yet another JavaScript framework built on top of NestJS which is another backend JavaScript framework inspired by AngularJS. Stencil was developed to increase the productivity of engineers at SamagraX so that they spend less time setting projects up and more time writing business logic hence stencil comes with a lot of prebuilt components which can be setup with a single command hence in a way stencil is just NestJS on steriods right now.\nThe roadmap for stencil is to get out of the JavaScript ecosystem and become a standalone language agnostic and AI enabled framework easing developer’s lives as part of DoughHQ which is a side project I started post the initial engineering team of SamagraX exited after the Bharat Sah’AI’yak landing with Krutim. Any and all contributions are welcome.\nThe list of components that presently come out of the box with stencil are:\n\nAuthentication setup using our internal User Service.\nRate limiting and GeoIP interceptors\nIntegration with temporal\nSupport for config driven application bootstrapping which was very graciously contributed by Savio Dias as a part of his C4GT’24 project.\nObservability using the Prometheus and Grafana with single click setup and pre-built dashboards directly via the APIs.\nAuto generation of OpenAPI specification for the project.\n\nMore cool stuff (stencil roadmap) and AI enabled development will be coming soon to Stencil as I start getting more time to work on the project."},"projects/Stylus":{"slug":"projects/Stylus","filePath":"projects/Stylus.md","title":"StylusDB","links":[],"tags":["projects","open-source","databases"],"content":"StylusDB is a collection (presently 2 but there will be more) of toy databases built by me and Chakshu Gautam while trying to tinker around and learn the database internals.\nThere is Stylus-SQL which is an implementation of a small SQL DB with it’s own SQL parsing engine and storage layer and everything. This was created in a tutorial like fashion so that people (mostly college students) can start taking up building their own database without being very overwhelmed and we started with a very crude regex and csv file based implementation so make it as approachable as possible but suggestions and improvements are always welcome.\nWe also took a couple of live sessions for the first 21 steps recordings for which can be accessed as this Youtube Playlist.\nWe also have StylusDB JS (there is no fancy name for this one yet) which is a redis like distributed key value store that I built as a part of my B.Tech. final year project. This was aimed at me trying to learn more about distributed systems in a practical way after taking a theory course on distributed computing in my 7th semester and as a result of this I researched into and read about distributed consensus algorithms like Paxos, RAFT, ZAP, etc. and finally ended up using RAFT to implement the distributed databases trying to opitmise and modify the algorithm to make it a bit faster and I ended up implementing things like direct reads from followers rather than only the leader to serve the requests and reduce response times with the trade off being that the data might be stale due to eventual consistency. We also used SIMD for faster TCP stream data processing trying to shave off some time and we did see around 1.5-2x perf boost over the native JSON.parse().\nThe architecture for the project looked something like shown below.\n\nStylusDB was started along side a small community called Status 20X which I aim to create as a place for deep tech nerds who can think beyond passing tech interviews and actually enjoy the computer science."},"projects/Veil":{"slug":"projects/Veil","filePath":"projects/Veil.md","title":"Veil","links":[],"tags":["products","open-source"],"content":"Veil is a modded caddy fork which gives API paywalls as a built in feature to the caddy webserver running in a reverse proxy mode. Veil aims to be a self hostable solution for those who want lesser number of features or want to tweak it as per yours wishes with a fully featured SaaS marketplace coming soon to ease your deployments and paywall management.\nBelow is a small demo for Veil.\n\nPlease refer to Veil docs to know more about the project."},"projects/index":{"slug":"projects/index","filePath":"projects/_index.md","title":"My Work","links":[],"tags":[],"content":"I started programming in 2020 during CoVID-19 quarantine lockdown right after I graduated high school and appeard for JEE. I had a little bit of experience programming in python and writing HTML pages from my school days because those lectures on QBasic, HTML and Python and how it all seemed like wizardy at that time to a 12 year old is what gave birth to my love and passion for my craft.\nYou can read more about some of the bigger projects I have worked on from the list below."}}